apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  creationTimestamp: null
  labels:
    app: {{ .Values.serviceName  | quote}}
  name: {{ .Values.serviceName  | quote}}
  namespace: {{ .Values.namespace  | quote}}
spec:
  replicas: {{ .Values.replica }}
  selector:
    matchLabels:
      app: {{ .Values.serviceName  | quote}}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.serviceName  | quote}}
    spec:
      containers:
      - image: {{ .Values.repo }}/{{ .Values.image }}:{{.Chart.AppVersion}}
        ports:
        - containerPort: {{ .Values.containerPort }}
        name: backend-service
        resources: {}
        env:
        - name: PORT
          value: {{ .Values.containerPort | quote}}
        - name: MYSQL_KUBE
          value: root:password@tcp(10.1.0.57:3306)/colors
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: my-database-credentials
              key: db_username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-database-credentials
              key: db_password
        - name: MY_CONFIG
          valueFrom:
            configMapKeyRef:
              name: my-sample-config
              key: config
  minReadySeconds: 30
  revisionHistoryLimit: 3
  strategy:
    # canary: #Indicates that the rollout should use the Canary strategy
    #   canaryService: {{ .Values.serviceNameCanary  | quote}}
    #   stableService: {{ .Values.serviceName  | quote}}
    #   maxSurge: "25%"
    #   maxUnavailable: 0
    #   steps:
    #   - setWeight: 10
    #   - pause:
    #       duration: 1m # 1 minute
    #   - setWeight: 20
    #   - pause: {} # pause indefinitely
      blueGreen:
         autoPromotionEnabled: false
         activeService: backendgolang
         previewService: backendgolang-canary